services:
  db:
    image: postgres:15-alpine 
    container_name: pcfav_postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/ 
    environment:
      - POSTGRES_USER=postgres        
      - POSTGRES_PASSWORD=postgres 
      - POSTGRES_DB=pcfavorites_db        
    ports:
      - "5432:5432" 
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U postgres -d pcfavorites_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./pcrecommender 
      dockerfile: Dockerfile
    container_name: pcfav_django_backend
    command: >
      sh -c "python manage.py makemigrations recommender_api &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./pcrecommender:/app 
    ports:
      - "8000:8000" 
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=pcrecommender.settings
      - POSTGRES_NAME=pcfavorites_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db       
      - POSTGRES_PORT=5432
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      db: 
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./pcrecommender-frontend 
      dockerfile: Dockerfile
    container_name: pcfav_nextjs_frontend
    ports:
      - "3000:3000" 
    environment:
      - NODE_ENV=development 
      - NEXT_PUBLIC_API_BASE_URL=http://backend:8000/api 
                                                        
    depends_on:
      - backend 
    volumes:
      - ./pcrecommender-frontend:/app 
      - /app/node_modules 
      - /app/.next       
    restart: unless-stopped

volumes:
  postgres_data: 